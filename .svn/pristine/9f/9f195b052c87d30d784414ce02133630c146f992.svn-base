{
  gStyle->SetPalette(1);
  gStyle->SetOptStat(kFALSE);
  //--------------------------------------------------
  // Chain together the sims

  cout<<"Chaining sims..."<<endl;

  Int_t numchains=4;
  //Int_t numchains=2;
  Int_t numsims=10;

  Int_t numens=3;
  Double_t minE[numens]={0.00,1.00,50.0};
  Double_t maxE[numens]={1.00,50.0,500.};
  
  /*
  Int_t numens=2;
  Double_t minE[numens]={0.00,100.0};
  Double_t maxE[numens]={100.,500.0};
  */
  Int_t numhists=numchains*numens;


  TChain *geantTree[numchains];
  
  char name_base[numchains][200]={
    "~/scratch/ROOTfiles/prexsim_shldgeo_1e6__LD2none-1_SRC_nfld_sim_",
    "~/scratch/ROOTfiles/prexsim_shldgeo_1e6_Pb_none-1_prexI_nfld_sim_",
    "~/scratch/ROOTfiles/prexsim_shldgeo_1e6_Pb__prexborpoly10_prexII_nfld_sim_",
    //"~/scratch/ROOTfiles/prexsim_shldgeo_1e6_Pb_none-1_prexII_nfld_sim_",
    "~/scratch/ROOTfiles/prexsim_shldgeo_1e6_Pb__combo10_nfld_sim_"
   };
  /*
  char name_base[numchains][200]={
    "~/scratch/ROOTfiles/prexsim_shldgeo_1e6_none-1_sim_",
    "~/scratch/ROOTfiles/prexsim_shldgeo_1e6_none-1_coll_z0_sim_",
  };
  */
  char name[200];

  for (Int_t j=0;j<numchains;j++){
    geantTree[j]=new TChain("geant");
    cout<<name_base[j];
    for (Int_t i=0;i<numsims;i++){
      sprintf(name,"%s%i.root",name_base[j],i);
      geantTree[j]->Add(name);
      cout<<" "<<i;
    }
    cout<<endl;
  }

  //--------------------------------------------------
  //Some formatting stuff:

  //Int_t histcolor[numchains]={1,2};
  //Int_t histlinetype[numchains]={1,1};
    
  Int_t histcolor[numchains]={1,2,1,2};
  // 1 - solid, 2 - dashed
  //  Int_t histlinetype[numchains]={1,2,1,2,1,2};
  Int_t histlinetype[numchains]={1,1,1,1};

  // Needs to match the order of the input file names...  
    char legtitle[numchains][200]={
    "10 cm LD2, 4.46 GeV",
    "0.5 mm Pb, PREx I",
    "0.5 mm Pb, PREx II",
    //"0.5 mm Pb, PREx II, no shield"
    "0.5 mm Pb, PREx II, combo shield"
  };
  /*
  char legtitle[numchains][200]={
    "old coll defn",
    "new coll defn"
  };
    */
  //--------------------------------------------------
  // Set up some cuts, etc.

  Double_t total_neutrons[numhists];

  TH2F* h[numhists];
  TH1F* ho[numhists];
  char hname[numhists][200];
  char plot[numhists][200];

  Int_t volume =0;
  Int_t particle =5;

  char cut[200];
  sprintf(cut,"volume==%i&&type==%i",volume,particle);

  Int_t nxbins = 400; Int_t xmin = -200;  Int_t xmax = 200;
  Int_t nybins = 160; Int_t ymin = -80;  Int_t ymax = 80;

  h1 = new TH2F("h1",legtitle[0],nxbins,xmin,xmax,nybins,ymin,ymax);
  h2 = new TH2F("h2",legtitle[1],nxbins,xmin,xmax,nybins,ymin,ymax);
  h3 = new TH2F("h3",legtitle[2],nxbins,xmin,xmax,nybins,ymin,ymax);
  h4 = new TH2F("h4",legtitle[3],nxbins,xmin,xmax,nybins,ymin,ymax);

  Double_t n_max=50;
  TCanvas *c1 = new TCanvas("c1");
  c1->Divide(2,2);
   
  c1->cd(1);
  h1->SetMaximum(n_max);
  geantTree[0]->Draw("x0/10.:z0/10.>>h1",cut,"colz");
  
  c1->cd(2);
  h2->SetMaximum(n_max);
  geantTree[1]->Draw("x0/10.:z0/10.>>h2",cut,"colz");

  c1->cd(3);
  h3->SetMaximum(n_max);
  geantTree[2]->Draw("x0/10.:z0/10.>>h3",cut,"colz");
  
  c1->cd(4);
  h4->SetMaximum(n_max);
  geantTree[3]->Draw("x0/10.:z0/10.>>h4",cut,"colz");

  //================================================================
  nxbins = 300; xmin = -400;   xmax = 2600;
  nybins = 80; ymin = -80;   ymax = 80;

  h5 = new TH2F("h5",legtitle[0],nxbins,xmin,xmax,nybins,ymin,ymax);
  h6 = new TH2F("h6",legtitle[1],nxbins,xmin,xmax,nybins,ymin,ymax);
  h7 = new TH2F("h7",legtitle[2],nxbins,xmin,xmax,nybins,ymin,ymax);
  h8 = new TH2F("h8",legtitle[3],nxbins,xmin,xmax,nybins,ymin,ymax);

  n_max=50;
  TCanvas *c2 = new TCanvas("c2");
  c2->Divide(2,2);
   
  c2->cd(1);
  h5->SetMaximum(n_max);
  geantTree[0]->Draw("x0/10.:z0/10.>>h5",cut,"colz");
  
  c2->cd(2);
  h6->SetMaximum(n_max);
  geantTree[1]->Draw("x0/10.:z0/10.>>h6",cut,"colz");

  c2->cd(3);
  h7->SetMaximum(n_max);
  geantTree[2]->Draw("x0/10.:z0/10.>>h7",cut,"colz");
  
  c2->cd(4);
  h8->SetMaximum(n_max);
  geantTree[3]->Draw("x0/10.:z0/10.>>h8",cut,"colz");

}


